<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on Blog by Stisa</title>
    <link>http://blog.tisato.me/tags/windows/</link>
    <description>Recent content in Windows on Blog by Stisa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>eu</language>
    <lastBuildDate>Sat, 21 Nov 2015 11:57:47 +0100</lastBuildDate>
    <atom:link href="http://blog.tisato.me/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Luxe and Universal Windows Apps</title>
      <link>http://blog.tisato.me/articles/luxeengine-universal-windows-app/</link>
      <pubDate>Sat, 21 Nov 2015 11:57:47 +0100</pubDate>
      
      <guid>http://blog.tisato.me/articles/luxeengine-universal-windows-app/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m still playing with &lt;a href=&#34;http://luxeengine.com/&#34;&gt;luxe&lt;/a&gt;, and I heard that there is the possibility to turn html5 apps into &lt;a href=&#34;https://msdn.microsoft.com/en-US/library/windows/apps/dn726767.aspx&#34;&gt;Windows Universal Apps&lt;/a&gt;(also known as UWA) and I had to try it, even if it&amp;rsquo;s just (from my understanding, anyway) a wrapper around a webview.&lt;br /&gt;
The following steps assume that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you have already installed luxe&lt;/li&gt;
&lt;li&gt;you can build for the &lt;code&gt;web&lt;/code&gt; target&lt;/li&gt;
&lt;li&gt;you have Visual Studio installed (2013+ should be fine)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting from the base empty project, add this to your &lt;code&gt;Main.hx&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clike&#34;&gt;    ...
    override function ready() {

        var s : Sprite = new Sprite({
            name : &amp;quot;s&amp;quot;,
            size: new Vec(48,48),
            pos: Luxe.screen.mid
        });

    } //ready
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, follow those steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build a luxe project for web: &lt;code&gt;flow build web&lt;/code&gt;  (or &lt;code&gt;flow run web&lt;/code&gt; if you want to make sure it works by launching it in your browser).&lt;/li&gt;
&lt;li&gt;Open Visual Studio (I used Visual Studio 2015)&lt;/li&gt;
&lt;li&gt;Create a new project in Visual Studio : &lt;code&gt;New Project -&amp;gt; JavaScript -&amp;gt; Blank App (Windows Universal)&lt;/code&gt;, I named it &lt;code&gt;TestSnowkit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Now grab the &lt;code&gt;project.js&lt;/code&gt; generated by flow, and copy it into your Visual Studio Project folder&lt;/li&gt;
&lt;li&gt;Now in Visual Studio, in &lt;code&gt;Solution Explorer&lt;/code&gt; right click on &lt;code&gt;TestSnowkit&lt;/code&gt;-&amp;gt; &lt;code&gt;Add&lt;/code&gt;-&amp;gt; &lt;code&gt;Existing item&lt;/code&gt;  (or press  &lt;code&gt;Shift+Alt+A&lt;/code&gt;) and select &lt;code&gt;project.js&lt;/code&gt;&lt;br /&gt;
(If you need sound, do the same for &lt;code&gt;howler.js&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;default.html&lt;/code&gt; to reference &lt;code&gt;project.js&lt;/code&gt;. The other references are not needed, but you can keep them if you want to use some UWA specific feature&lt;/li&gt;
&lt;li&gt;In Visual Studio, press &lt;code&gt;F5&lt;/code&gt; to test your project.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;    ...
    &amp;lt;body class=&amp;quot;win-type-body&amp;quot;&amp;gt;
        &amp;lt;p&amp;gt;Content goes here&amp;lt;/p&amp;gt;
        &amp;lt;script src=&amp;quot;project.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;modified default.html&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a picture of the project running:&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://blog.tisato.me/media/luxe-uwa-output.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Our white square running in a UWA&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Thanks for reading this, and if you find errors or if I got something wrong, please &lt;a href=&#34;https://github.com/stisa/stisa.github.io&#34;&gt;open an issue on github&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>